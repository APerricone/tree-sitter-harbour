==================
 numbers
==================
proc func()
    local x
    x:=1
    x:=2.4
return
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (local_list (identifier) )
    (assignment_statement (identifier) (number))
    (assignment_statement (identifier) (number))
    (return_statement)))

==================
 strings
==================
proc func()
    local x
    x:="double quote"
    x:='single quote'
    x:=[square parentesis]
return
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (local_list (identifier) )
    (assignment_statement (identifier) (string))
    (assignment_statement (identifier) (string))
    (assignment_statement (identifier) (string))
    (return_statement)))

==================
 datetime
==================
proc func()
    local x
    x := d"2018-11-26"
    x := t"2018-11-26 13:25:34.234"
    x := {^ 2018-11-26 13:25:34.234 }
return
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (local_list (identifier) )
    (assignment_statement (identifier) (datetime))
    (assignment_statement (identifier) (datetime))
    (assignment_statement (identifier) (datetime))
    (return_statement)))

==================
 array and hash use
==================
proc funName()
  local x
  x[1] := x["2"]
return
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (local_list (identifier) )
    (assignment_statement (hash_or_array_ref (identifier) (number)) (hash_or_array_ref (identifier) (string)))
    (return_statement)))

==================
 array and hash use 2
==================
proc funName()
  local x
  x[1][2] := x["1","2"]
return
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (local_list (identifier) )
    (assignment_statement (hash_or_array_ref (identifier) (number) (number)) (hash_or_array_ref (identifier) (string) (string)))
    (return_statement)))

==================
 array and hash constant
==================
proc test()
    local a
    a := {}
    a := {=>}
    a := {"a"=>3}
    a := {1,2,3}
    a := {1=>"aa","aa"=>1}
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (local_list (identifier) )
    (assignment_statement (identifier) (hash_or_array_constant))
    (assignment_statement (identifier) (hash_or_array_constant (hash_element)))
    (assignment_statement (identifier) (hash_or_array_constant (hash_element (string) (number))))
    (assignment_statement (identifier) (hash_or_array_constant (number) (number) (number)))
    (assignment_statement (identifier) (hash_or_array_constant (hash_element (number) (string)) (hash_element (string) (number))))
    ))
